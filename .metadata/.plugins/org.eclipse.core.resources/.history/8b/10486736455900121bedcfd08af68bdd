package org.cflgraph.cfl;

import java.util.ArrayList;

import org.cflgraph.cfl.Element.Variable;

public abstract class Production {
	public static class SingleProduction {
		private Variable target;
		private Element input;
		
		public SingleProduction(Variable target, Element input) {
			this.target = target;
			this.input = input;
		}
		
		public Variable getTarget() {
			return this.target;
		}
		
		public Element getInput() {
			return this.input;
		}
		
		public boolean matches(Element input) {
			return this.input.equals(input);
		}
	}

	public static class PairProduction {
		private Variable target;
		
		private Element firstInput;
		private Element secondInput;
		
		public PairProduction(Variable target, Element firstInput, Element secondInput) {
			this.target = target;
			this.firstInput = firstInput;
			this.secondInput = secondInput;
		}
		
		public Variable getTarget() {
			return this.target;
		}
		
		public Element getFirstInput() {
			return this.firstInput;
		}
		
		public Element getSecondInput() {
			return this.secondInput;
		}

		@Override
		public String toString() {
			return this.target.toString() + " -> (" + this.firstInput.toString() + "," + this.secondInput.toString() + ")";
		}
	}

	
	@Override
	public int hashCode() {
		int hashCode = this.target.hashCode();
		for(Element input : this.getInputs()) {
			hashCode += input.hashCode();
		}
		return hashCode;
	}

	@Override
	public boolean equals(Object object) {
		if(this == object) {
			return true;
		} else if(object == null || this.getClass() != object.getClass()) {
			return false;
		} else {
			Production production = (Production)object;
			if(this.getInputs().size() != production.getInputs().size()) {
				return false;
			}
			boolean equals = this.target.equals(production.getTarget());
			for(int i=0; i<this.getInputs().size(); i++) {
				equals &= this.getInputs().get(i).equals(production.getInputs().get(i));
			}
			return equals;
		}		
	}
	
	public abstract ArrayList<Element> getInputs();
	//public abstract boolean matches(ArrayList<Element> inputs);
}

